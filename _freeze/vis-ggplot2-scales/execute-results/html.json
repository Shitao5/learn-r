{
  "hash": "78ed9055a94cb291792b25d4fcb41c6c",
  "result": {
    "markdown": "# ggplot2-scales {#sec-scales}\n\n\n::: {.cell}\n::: {.cell-output-display}\n::: callout-warning\n## 各位看客：\n*Learn-R* 仍在写作流程中。本章节正在进行写作和结构调整，可能出现混乱或不完整的情况。 \n:::\n:::\n:::\n\n::: {.cell layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-2_89b12ccfc77904fe537c1822143e80ff'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n:::\n\n\n标度控制数据到美学的映射，它将数据转为大小（size）、颜色（color）、位置（position）或形状（shape），它也提供了解释绘图的工具：坐标轴和图例。\n\n## 位置标度和坐标轴\n\n### 数值型\n\n#### Limits\n\n`lims()`或`limits`参数可用于修改坐标轴范围，需要接受长度为2的数值型向量。如果只设置单侧范围，另一侧设置为`NA`。\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-3_25b94c2140967cd9c820b8ea39460fd8'}\n\n```{.r .cell-code}\nmpg %>% filter(year == 1999) %>% \n  ggplot(aes(displ, hwy)) +\n  geom_point() +\n  scale_x_continuous(limits = c(1, 7)) +\n  scale_y_continuous(limits = c(10, 45))\n\nmpg %>% filter(year == 2008) %>% \n  ggplot(aes(displ, hwy)) +\n  geom_point() +\n  lims(x = c(1, 7), y = c(10, 45))\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-3-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n#### Zooming in\n\n如果目标是放大绘图的一部分，使用`coord_cartesian()`的`xlim`和`ylim`参数通常会更好。\n\n\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-4_7ededd250f8d9893f8b13a2787398908'}\n\n```{.r .cell-code}\nbase <- ggplot(mpg, aes(drv, hwy)) +\n  geom_hline(yintercept = 28, color = \"red\") +\n  geom_boxplot()\n\nbase\nbase + coord_cartesian(ylim = c(10, 35))\nbase + ylim(10, 35)\n#> Warning: Removed 6 rows containing non-finite values (stat_boxplot).\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-4-2.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-4-3.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n:::\n\n\n#### Visual range expansion\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-5_f093e4d5f6e6575f12260f9a3f779406'}\n\n```{.r .cell-code}\nbase <- ggplot(faithfuld, aes(waiting, eruptions)) +\n  geom_raster(aes(fill = density)) +\n  theme(legend.position = \"none\") +\n  labs(x = NULL, y = NULL)\n\nbase\nbase + \n  scale_x_continuous(expand = expansion(0)) +\n  scale_y_continuous(expand = expansion(0))\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-6_d31821317496bcc3e219e3b04be61536'}\n\n```{.r .cell-code}\nbase + \n  scale_x_continuous(expand = expansion(add = 3)) +\n  scale_y_continuous(expand = expansion(add = 3))\n\nbase +\n  scale_x_continuous(expand = expansion(mult = .2)) +\n  scale_y_continuous(expand = expansion(mult = .2))\n\nbase +\n  scale_x_continuous(expand = expansion(mult = c(.05, .2))) +\n  scale_y_continuous(expand = c(.05, 0, .2, 0))\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-6-2.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-6-3.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n:::\n\n\n`add`参数是在与数据变量相同的尺度上指定的，`mult`参数是相对于轴的范围指定的。\n\n#### Breaks\n\n\n::: {.cell layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-7_1b3de8023ed944e213919af73042c5bb'}\n\n```{.r .cell-code}\ntoy <- data.frame(\n  const = 1,\n  up = 1:4,\n  txt = letters[1:4],\n  big = (1:4) * 1000,\n  log = c(2, 5, 10, 2000)\n)\ntoy\n#>   const up txt  big  log\n#> 1     1  1   a 1000    2\n#> 2     1  2   b 2000    5\n#> 3     1  3   c 3000   10\n#> 4     1  4   d 4000 2000\n```\n:::\n\n\n通过向`breaks`参数传递数值，可手动设置断点。设置`breaks = NULL`移除断点和相关的刻度线。\n\n\n\n\n::: {.cell layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-8_b264ba7eef197b8d34cff17ea533bdfc'}\n\n```{.r .cell-code}\nbase <- ggplot(toy, aes(big, const)) +\n  geom_point() +\n  labs(x = NULL, y = NULL) +\n  scale_y_continuous(breaks = NULL)\nbase\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=80% style='max-width: 4.8in'}\n:::\n:::\n\n\n需注意，手动设置断点会移动主要和次要网格线：\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-9_794527087bb8bdc1ac9f247e1f3d34c3'}\n\n```{.r .cell-code}\nbase + scale_x_continuous(breaks = c(1000, 2000, 4000))\nbase + scale_x_continuous(breaks = c(1000, 1500, 2000, 4000))\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-9-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n也可以向`breaks`传递函数，该函数应有一个指定标度范围的参数（长度为2的数值型向量），并且返回断点的数值型向量。scales包[@scales]提供了一些有用的工具：\n\n-   `scales::breaks_extended()`为数值轴自动创建断点（ggplot2的标准方法）；\n-   `scales::breaks_log()`为对数轴自动创建断点；\n-   `scales::breaks_pretty()`为日期/时间创建断点；\n-   `scales::breaks_width()`创建等距的断点。\n\n\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-10_68f2f38d15d9d5d0c643b7af28c01ba3'}\n\n```{.r .cell-code}\nbase + \n  scale_x_continuous(breaks = scales::breaks_width(800))\nbase + \n  scale_x_continuous(breaks = scales::breaks_width(800, offset = 200)) # 偏移\nbase +\n  scale_x_continuous(breaks = scales::breaks_width(800, offset = -200))\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-10-2.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-10-3.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n:::\n\n\n#### Minor breaks\n\n次要断点（主网格线之间未标记的网格线）对于对数轴特别有用，因为它清晰地展示了刻度是非线性的。\n\n\n::: {.cell layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-11_53bfa019792676f1bd0396b832446b6e'}\n\n```{.r .cell-code}\nmb <- unique(as.numeric(1:10 %o% 10 ^ (0:3)))\nmb\n#>  [1]     1     2     3     4     5     6     7     8     9    10\n#> [11]    20    30    40    50    60    70    80    90   100   200\n#> [21]   300   400   500   600   700   800   900  1000  2000  3000\n#> [31]  4000  5000  6000  7000  8000  9000 10000\n```\n:::\n\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-12_0c03639e82cdd0a6e54b1bc369eaba8c'}\n\n```{.r .cell-code}\nbase <- ggplot(toy, aes(log, const)) +\n  geom_point() +\n  labs(x = NULL, y = NULL) +\n  scale_y_continuous(breaks = NULL)\n\nbase + scale_x_log10()\nbase + scale_x_log10(minor_breaks = mb)\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-12-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n#### Labels\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-13_7cba9b15c23f26a734328ca9c5034840'}\n\n```{.r .cell-code}\nbase <- ggplot(toy, aes(big, const)) +\n  geom_point() +\n  labs(x = NULL, y = NULL) +\n  scale_y_continuous(breaks = NULL)\n\nbase\nbase + scale_x_continuous(\n  breaks = c(2000, 4000),\n  labels = c(\"2k\", \"4k\")\n)\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-13-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n通常不需要手动设置`labels`参数，和`breaks`参数一样，scales包提供了有效的函数：\n\n-   `scales::label_bytes()`将数字转化为kb、mb等字节格式；\n-   `scales::label_comma()`为数字添加逗号；\n-   `scales::label_dollar()`将数字转为货币；\n-   `scales::label_ordinal()`将数字转为等级顺序；\n-   `scales::label_percent()`将数字转为百分数；\n-   `scales::label_pvalue()`将数字转为p值。\n\n\n\n\n::: {.cell layout-ncol=\"3\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-14_da39618eab97b9e4183e743a46d7ed35'}\n\n```{.r .cell-code}\nbase <- ggplot(toy, aes(big, const)) +\n  geom_point() +\n  labs(x = NULL, y = NULL) +\n  scale_x_continuous(breaks = NULL)\n\nbase\nbase + scale_y_continuous(labels = scales::label_percent())\nbase + scale_y_continuous(labels = scales::label_dollar(prefix = \"\", suffix = \"€\")) # 默认前缀$\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-14-2.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-14-3.png){fig-align='center' width=33.3% style='max-width: 2in'}\n:::\n:::\n\n\n注意`breaks = NULL`和`labels = NULL`的差别：\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-15_a51b2a21ebf267fd87316825f7ee0486'}\n\n```{.r .cell-code}\nbase + scale_y_continuous(breaks = NULL)\nbase + scale_y_continuous(labels = NULL)\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-15-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n#### Transformations\n\n每一个连续的标度都带有允许使用各种转换的`trans`参数。\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-16_da6813b2a4339bf8785b27640ae91269'}\n\n```{.r .cell-code}\nggplot(mpg, aes(displ, hwy)) +\n  geom_point() +\n  scale_y_continuous(trans = \"reciprocal\") # y轴取倒数\n\n# x和y轴取10为底的对数\nggplot(diamonds, aes(price, carat)) +\n  geom_bin2d() +\n  scale_x_continuous(trans = \"log10\") +\n  scale_y_continuous(trans = \"log10\")\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-16-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n可以使用`scales::trans_new()`构建转换，scales包同样提供了许多常见的转换：\n\n| Name                   | Transformer                  | Function $f(x)$         | Inverse $f^{-1}(x)$\n|------------------------|------------------------------|-------------------------|------------------------\n| `\"asn\"`                | `scales::asn_trans()`        | $\\tanh^{-1}(x)$         | $\\tanh(y)$\n| `\"exp\"`                | `scales::exp_trans()`        | $e ^ x$                 | $\\log(y)$\n| `\"identity\"`           | `scales::identity_trans()`   | $x$                     | $y$\n| `\"log\"`                | `scales::log_trans()`        | $\\log(x)$               | $e ^ y$\n| `\"log10\"`              | `scales::log10_trans()`      | $\\log_{10}(x)$          | $10 ^ y$\n| `\"log2\"`               | `scales::log2_trans()`       | $\\log_2(x)$             | $2 ^ y$\n| `\"logit\"`              | `scales::logit_trans()`      | $\\log(\\frac{x}{1 - x})$ | $\\frac{1}{1 + e(y)}$\n| `\"probit\"`             | `scales::probit_trans()`     | $\\Phi(x)$               | $\\Phi^{-1}(y)$\n| `\"reciprocal\"`         | `scales::reciprocal_trans()` | $x^{-1}$                | $y^{-1}$\n| `\"reverse\"`            | `scales::reverse_trans()`    | $-x$                    | $-y$\n| `\"sqrt\"`               | `scales::scale_x_sqrt()`     | $x^{1/2}$               | $y ^ 2$\n\n当然，也可以手动进行这些转换，绘制的图形外观是一样的，但是刻度标签将有所差异。具体来讲，如果使用转换标度，刻度标签将展示原始的数据空间；如果手动转换数据，刻度标签将展示转换后的数据空间。\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\" hash='vis-ggplot2-scales_cache/html/unnamed-chunk-17_154b5a562116d75af0a703b6e61161e8'}\n\n```{.r .cell-code}\n# 手动转换数据\nggplot(mpg, aes(log10(displ), hwy)) +\n  geom_point()\n\n# 转换标度\nggplot(mpg, aes(displ, hwy)) +\n  geom_point() +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n\n::: {.cell-output-display}\n![](vis-ggplot2-scales_files/figure-html/unnamed-chunk-17-2.png){fig-align='center' width=50% style='max-width: 3in'}\n:::\n:::\n\n\n### 日期-时间型\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}